version: 0.2

phases:
  pre_build:
    commands:
    - echo Logging in to Amazon ECR...
    - $(aws ecr get-login --no-include-email --region ${ECR_REGION})
  build:
    commands:
    - echo Build started on `date`
#   Print AWS build variables
    - |
      echo "AWS CodeBuild Extra Environment Variables:
      AWS_DEFAULT_REGION = $AWS_DEFAULT_REGION
      AWS_REGION = $AWS_REGION
      CODEBUILD_BUILD_ARN = $CODEBUILD_BUILD_ARN
      CODEBUILD_BUILD_ID = $CODEBUILD_BUILD_ID
      CODEBUILD_BUILD_IMAGE = $CODEBUILD_BUILD_IMAGE
      CODEBUILD_BUILD_SUCCEEDING = $CODEBUILD_BUILD_SUCCEEDING
      CODEBUILD_INITIATOR = $CODEBUILD_INITIATOR
      CODEBUILD_KMS_KEY_ID = $CODEBUILD_KMS_KEY_ID
      CODEBUILD_LOG_PATH = $CODEBUILD_LOG_PATH
      CODEBUILD_RESOLVED_SOURCE_VERSION = $CODEBUILD_RESOLVED_SOURCE_VERSION
      CODEBUILD_SOURCE_REPO_URL = $CODEBUILD_SOURCE_REPO_URL
      CODEBUILD_SOURCE_VERSION = $CODEBUILD_SOURCE_VERSION
      CODEBUILD_SRC_DIR = $CODEBUILD_SRC_DIR
      CODEBUILD_START_TIME = $CODEBUILD_START_TIME
      HOME = $HOME"
#   Define profile from pipeline initiator name
    - |
      if [ ! ${CODEBUILD_INITIATOR} ]; then
        echo Required CODEBUILD_INITIATOR env variable to set profile
        exit -1
      elif [ ${CODEBUILD_INITIATOR} = "codepipeline/backend-dev" ]; then
        export APP_PROFILE="dev"
      elif [ ${CODEBUILD_INITIATOR} = "codepipeline/backend-stage" ]; then
        export APP_PROFILE="stage"
      elif [ ${CODEBUILD_INITIATOR} = "codepipeline/backend-prod" ]; then
        export APP_PROFILE="prod"
      fi
    - echo Build started for \'$APP_PROFILE\' profile
    - chmod +x gradlew
    - sh deploy/docker/build.sh -p ${APP_PROFILE}
#   Tag and push postgres
    - >
      docker tag electrica/postgres:${APP_PROFILE} ${ECR_HOST}/electrica/postgres:${APP_PROFILE} &&
      docker push ${ECR_HOST}/electrica/postgres:${APP_PROFILE}
#   Tag and push gateway
    - >
      docker tag electrica/gateway:${APP_PROFILE} ${ECR_HOST}/electrica/gateway:${APP_PROFILE} &&
      docker push ${ECR_HOST}/electrica/gateway:${APP_PROFILE}
#   Tag and push user-service
    - >
      docker tag electrica/user-service:${APP_PROFILE} ${ECR_HOST}/electrica/user-service:${APP_PROFILE} &&
      docker push ${ECR_HOST}/electrica/user-service:${APP_PROFILE}
#   Tag and push connector-hub-service
    - >
      docker tag electrica/connector-hub-service:${APP_PROFILE} ${ECR_HOST}/electrica/connector-hub-service:${APP_PROFILE} &&
      docker push ${ECR_HOST}/electrica/connector-hub-service:${APP_PROFILE}
  post_build:
    commands:
    - echo Build completed on `date`
    - echo Cleaning up all untagged images..
    - |
      aws ecr describe-repositories --output text | awk '{print $5}' |
        while read line; do
          aws ecr list-images --repository-name $line --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output text |
            while read imageId; do
              aws ecr batch-delete-image --repository-name $line --image-ids imageDigest=$imageId
            done
        done
